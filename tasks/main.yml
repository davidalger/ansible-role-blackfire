---
# Assumes SELinux python tools pre-installed; these will be installed by the davidalger.selinux role
- name: Configure SELinux so Blackfire Agent will transition into httpd_t context on startup
  sefcontext:
    target: "{{ item.target }}"
    setype: "{{ item.setype }}"
    ftype: "{{ item.ftype | default('a') }}"
    selevel: "{{ item.selevel | default(omit) }}"
    seuser: "{{ item.seuser | default(omit) }}"
    state: "{{ item.state | default('present') }}"
  with_items:
    - target: /usr/bin/blackfire-agent
      setype: httpd_exec_t
      state: present

    - target: /var/log/blackfire/agent\.log
      setype: httpd_log_t
      state: present

    - target: /var/run/blackfire/agent\.sock
      setype: httpd_var_run_t
      state: present
  when: ('status' in ansible_selinux) and (ansible_selinux.status != 'disabled')

- name: Install Blackfire dependency is installed
  package:
    name: yum-utils
    state: present

- name: Ensure extra Blackfire dependency on older EL versions is installed
  package:
    name: pygpgme
    state: present
  when: ansible_distribution_major_version | int < 8

- name: Install packagecloud GPG key
  rpm_key:
    key: https://packagecloud.io/gpg.key
    state: present

- name: Install Blackfire repository
  get_url:
    url: http://packages.blackfire.io/fedora/blackfire.repo
    dest: /etc/yum.repos.d/blackfire.repo
    mode: 0644

- name: Enforce repo_gpgcheck for blackfire repository
  lineinfile:
    dest: /etc/yum.repos.d/blackfire.repo
    regexp: "^repo_gpgcheck="
    line: "repo_gpgcheck={{ '0' if blackfire_disable_repo_gpgcheck else '1' }}"
    state: present

- name: Install Blackfire packages
  package:
    name:
      - blackfire-agent
      - blackfire-php
    state: present
  notify:
    - restart php-fpm

- name: Configure Blackfire Agent server-id
  lineinfile:
    path: /etc/blackfire/agent
    regexp: '^server-id='
    line: server-id={{ blackfire_server_id }}

- name: Configure Blackfire Agent server-token
  lineinfile:
    path: /etc/blackfire/agent
    regexp: '^server-token='
    line: server-token={{ blackfire_server_token }}
  notify:
    - restart blackfire-agent

- name: Configure blackfire-agent service
  service:
    name: blackfire-agent
    state: "{{ 'started' if blackfire_agent_enabled else 'stopped' }}"
    enabled: "{{ blackfire_agent_enabled }}"
